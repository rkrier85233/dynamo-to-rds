package com.cleo.dynamodb.entities;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;

import java.util.Date;
import java.util.List;
import java.util.Map;

import lombok.Getter;
import lombok.Setter;


/**
 * <strong>IMPORTANT:</strong> Fields that are user modifiable that are added or removed from this class need to also be
 * added to UsersDataFlow class at the bottom.  See the notes there regarding why.
 */
@Getter
@Setter
@DynamoDBTable(tableName = "crowsnest-dataflow-dev.DataFlow")
public class DataFlow  {
    public static final String CONNECTIVITY_TEST_RESULT_ATTRIBUTE = "connectivityTestResult";
    public static final String LAST_JOB_INITIATED_INFO_ATTRIBUTE = "lastJobInitiatedInfo";
    public static final String LAST_JOB_DETAIL_INFO_ATTRIBUTE = "lastJobDetailInfo";
    public static final String LAST_JOB_RESULT_INFO_ATTRIBUTE = "lastJobResultInfo";

    public static final int STATE_SORT_IN_PROGRESS = 0;
    public static final int STATE_SORT_COMPLETE = 1;
    public static final int STATE_SORT_PARTIAL_FAILURE = 2;
    public static final int STATE_SORT_COMPLETE_FAILURE = 3;

    @DynamoDBHashKey
    private String organizationId;
    @DynamoDBRangeKey
    private String id;
    private String name;
    private String lowerCaseName;
    private String description;
    private String operation;
    @DynamoDBTypeConverted(converter = DynamoMapConverter.class)
    private Map<String, Object> recurrence;
    @DynamoDBTypeConverted(converter = DynamoListConverter.class)
    private List<Map<String, Object>> sources;
    @DynamoDBTypeConverted(converter = DynamoListConverter.class)
    private List<Map<String, Object>> destinations;
    private String creator;
    private String updater;
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    private Date created;
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    private Date updated;
    private Map<String, String> creatorAttributes;
    private Map<String, String> updaterAttributes;
    private boolean stabilityCheckEnabled;
    private long maxWaitTimeForStabilityCheckInMilliseconds;
    private long jobCount;
    @DynamoDBAttribute(attributeName = CONNECTIVITY_TEST_RESULT_ATTRIBUTE)
    @DynamoDBTypeConverted(converter = DynamoMapConverter.class)
    private Map<String, Object> testResult;

    @DynamoDBAttribute(attributeName = LAST_JOB_INITIATED_INFO_ATTRIBUTE)
    @DynamoDBTypeConverted(converter = DynamoMapConverter.class)
    private Map<String, Object> lastJobInitiatedInfo;
    @DynamoDBAttribute(attributeName = LAST_JOB_DETAIL_INFO_ATTRIBUTE)
    @DynamoDBTypeConverted(converter = DynamoMapConverter.class)
    private Map<String, Object> lastJobDetailInfo;
    @DynamoDBAttribute(attributeName = LAST_JOB_RESULT_INFO_ATTRIBUTE)
    @DynamoDBTypeConverted(converter = DynamoMapConverter.class)
    private  Map<String, Object> lastJobResultInfo;
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.BOOL)
    private boolean softDeleted;

    // Public no arg constructor needed by persistence layer.
    public DataFlow() {

    }
}
